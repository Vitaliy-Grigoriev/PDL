name: GCC Builds

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    name: ${{ matrix.config.name }}

    env:
      CC: ${{ matrix.config.cc }}
      CXX: ${{ matrix.config.cxx }}

    strategy:
      fail-fast: false

      matrix:
        config:
        - {
            name: "GCC 10 Release",
            build_type: "Release",
            cc: "/usr/bin/gcc-10",
            cxx: "/usr/bin/g++-10",
            sanitizer: false
          }
        - {
            name: "GCC 10 Debug",
            build_type: "Debug",
            cc: "/usr/bin/gcc-10",
            cxx: "/usr/bin/g++-10",
            sanitizer: false
          }
        - {
            name: "GCC 11 Release",
            build_type: "Release",
            cc: "/usr/bin/gcc-11",
            cxx: "/usr/bin/g++-11",
            sanitizer: false
          }
        - {
            name: "GCC 11 Debug",
            build_type: "Debug",
            cc: "/usr/bin/gcc-11",
            cxx: "/usr/bin/g++-11",
            sanitizer: false
          }
        - {
            name: "GCC 11 Debug With Sanitizer",
            build_type: "Debug",
            cc: "/usr/bin/gcc-11",
            cxx: "/usr/bin/g++-11",
            sanitizer: true
          }

    steps:
    - uses: actions/checkout@v2

    - name: Set common repository and keys
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get -qq update
        sudo apt install libicu-dev libicu66 libxml2-dev zlib1g-dev
        DEPS_DIR="${{ github.workspace }}/DEPS"
        mkdir -p ${DEPS_DIR}

    - name: Download CMake
      run: |
        cd ${DEPS_DIR}
        CMAKE_URL="https://cmake.org/files/v3.20/cmake-3.20.2-linux-x86_64.tar.gz"
        mkdir cmake && wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
        export PATH=${DEPS_DIR}/cmake/bin:${PATH}

    - name: Install GCC 10
      if: contains(matrix.config.cc, 'gcc-10')
      run: |
        sudo apt install gcc-10 g++-10 libstdc++-10-dev
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 100

    - name: Install GCC 11
      if: contains(matrix.config.cc, 'gcc-11')
      run: |
        sudo apt install gcc-11 g++-11 libstdc++-11-dev
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 100
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 100

    - name: Build LLVM
      run: |
        ${CXX} --version
        cd ${{ github.workspace }}
        sudo chmod +x install_llvm.sh
        sudo sh ./install_llvm.sh ${DEPS_DIR}
        export PATH=${DEPS_DIR}/llvm:${PATH}

    - name: Build Boost
      run: |
        ${CXX} --version
        cd ${{ github.workspace }}
        sudo chmod +x install_boost.sh
        sudo sh ./install_boost.sh ${DEPS_DIR}
        export PATH=${DEPS_DIR}/boost:${PATH}

    - name: Build GTest
      run: |
        ${CXX} --version
        cd ${{ github.workspace }}
        sudo chmod +x install_gtest.sh
        sudo sh ./install_gtest.sh ${DEPS_DIR}
        export PATH=${DEPS_DIR}/gtest:${PATH}

    - name: Configure CMake
      run: |
        cd ${{ github.workspace }}
        uname -a
        cmake --version
        ${CXX} --version
        cmake -DPDL_WITH_TESTS=1 -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} -DCMAKE_CXX_COMPILER=${{ matrix.config.cxx }} .

    - name: Build Project
      run: cmake --build . -j "$(nproc)"

    - name: Test
      working-directory: ${{ github.workspace }}
      run: ctest --verbose
